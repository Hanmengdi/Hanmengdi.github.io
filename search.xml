<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一点感想</title>
      <link href="/2023/02/15/%E4%B8%80%E7%82%B9%E6%84%9F%E6%83%B3/"/>
      <url>/2023/02/15/%E4%B8%80%E7%82%B9%E6%84%9F%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<h3 id="一点思考"><a href="#一点思考" class="headerlink" title="一点思考"></a>一点思考</h3><p>在大一上学期的时候因为一门在学习通的通识课忘了挂，得到了77。现在大二又因为一门算法训练课的慕课spoc没加入班级而没算期中成绩（我清楚地记得当时输入了一个验证码是加入了，现在想想有可能是加错了。。），95的期中成绩算作0而得到了78的总成绩。</p><p>想要在这种课程上得到高绩点，就得时刻小心谨慎，或许这种东西不适合我吧，我宁愿考试。</p><p>其他的通识选修课有一个66分的，还有没过班级平均分的思修、近代史、四史（以及我觉得这学期的马原估计顶多也就是班级平均分）。这种课程想得到高绩点别人说上课要举手回答问题，老师的话主动接，下课多找老师聊聊增进感情，甚至有的找到以前的高中老师，利用高中老师和大学老师的这层关系来给自己打一个高分、还有在军训上因为不满教官的打分加考多次后和同学动手的。</p><p>很明显我做不到通过找老师多聊天增进感情来得到高分的行为，更不用说后面的那些令人鄙视的行径，这tm都算什么本事。</p><p>也许我被绩点裹挟了，在一个不适合自己的赛道和一些不择手段的人竞争最终的结果不用说，但从中也学到了很多，可能是自己对一些感觉无所谓的小事没放在心上，最后才造成的现在这个结果，只能说这个评分标准和我两个都有问题。</p><p>既然这条路不适合，想来想去还是直接考试拿出真本事最适合我，可能这还是自己的高考思维没有转变吧。从今往后那些水课实在不喜欢，干脆就别学了，也没保研的绩点压力了。趁现在放开了大学不封校，好好感受应有的大学生活吧，专业课和基础的一些数学课以及英语才是真正要学的东西，别在没有意义的课程上浪费太多时间。好好感受就行了。</p>]]></content>
      
      
      <categories>
          
          <category> 随便写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随便写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k倍区间</title>
      <link href="/2023/02/04/k%E5%80%8D%E5%8C%BA%E9%97%B4/"/>
      <url>/2023/02/04/k%E5%80%8D%E5%8C%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="K倍区间"><a href="#K倍区间" class="headerlink" title="K倍区间"></a>K倍区间</h1><p>acwing 1230<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line">ll s[N];    <span class="comment">//前缀和数组</span></span><br><span class="line">ll cnt[N];  <span class="comment">//cnt[i]表示模k余数为i的s[i]的个数 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;    <span class="comment">//数组长度，以及k </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] += s[i<span class="number">-1</span>];  <span class="comment">//计算前缀和</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ll maxk = <span class="number">0</span>;   <span class="comment">//k倍区间个数 </span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//为降低时间复杂度，将s[r] - s[l-1])%k == 0 转化为 s[r]%k == s[l-1]%k</span></span><br><span class="line">    cnt[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        maxk += cnt[s[i]%k];  <span class="comment">//先累加 某个数%k 与 s[i]%k相等的值</span></span><br><span class="line">        cnt[s[i]%k]++;        <span class="comment">//更新（加入当前循环的结果）取余为 s[i]%k 的值的个数</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; maxk &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>最难理解的莫过于最后的循环</p><p>把(s[r] - s[l-1]) % k == 0 中的l-1换为l，则由于l-1的范围在0~ r-1，则l的范围在1~r，<br>原式变为(s[r] - s[l]) % k == 0 再由数学知识变为 s[r] % k == s[l] % k，所以只需找到前面的取余结果与s[r]取余结果相同的数的个数即可。</p><p>cnt[i]表示为存放 某个数取余k余数为i的数的个数</p><p>maxk += cnt[s[i]%k];  <strong>先累加 某个数%k 与 s[i]%k相等的值</strong></p><p>再由cnt[s[i]%k]++; <strong>更新（加入当前循环的结果）取余为 s[i]%k 的值的个数</strong></p><p>cnt[0] = 0;是因为在进入i从1开始的循环时，余数为0的数已经有了一个了，即为s[0]。</p>]]></content>
      
      
      <categories>
          
          <category> c/c++算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>start</title>
      <link href="/2023/01/28/start/"/>
      <url>/2023/01/28/start/</url>
      
        <content type="html"><![CDATA[<p>start again!!!</p>]]></content>
      
      
      <categories>
          
          <category> 随便写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随便写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇Blog</title>
      <link href="/2023/01/20/%E7%AC%AC%E4%B8%80%E7%AF%87Blog/"/>
      <url>/2023/01/20/%E7%AC%AC%E4%B8%80%E7%AF%87Blog/</url>
      
        <content type="html"><![CDATA[<h3 id="在Hexo的第一篇Blog"><a href="#在Hexo的第一篇Blog" class="headerlink" title="在Hexo的第一篇Blog"></a>在Hexo的第一篇Blog</h3><p>​    起因还是在22年3月份实验室让做的一个hexo，当时随便做了一个什么也没有的网页了事了，距今已经十个月，今天突然想起，反正也没有什么事干，干脆把这个网站优化一下。但是事与愿违我以为搭好框架再随便改改一些前端的东西不就行了吗，还是想太简单了。首先就是命令全记不起来了（悲，不知如何下手，于是第一个做废了。 </p><p>​    第二个的时候基本快成功了，但不知为什么，配置在本地的hexo主页里的文章不管写什么打开全是hello world、公网的主页里文章打开还是主页，迷惑。这错误找遍了百度，谷歌全没有有点离谱。</p><p>​    第三个终于做好了就是这个从下载各种包和依赖，到部署到github，又在阿里云租了一个域名，基本每个环节都出了点小问题，经历了两次重做，终于能够正常的写东西并且在网站里能看见了。今天年二十九，算是在年三十之前搞完了。</p><p>​    主题用的Butterfly，感觉还是挺花哨的。本着简洁的原则，其他就基本没做什么，甚至转发和评论系统都没有做（可能是因为懒？反正知道这个站的人也没几个）。<br>​    那么以后要在这里记录一下学习，以及一些杂七杂八的东西了。<br>​    （还是用不习惯vscode写Markdown，喜欢Typora，毕竟花钱买的）<br>​    随便写个sigmoid试试：</p><p>​                     $\Large \sigma{(x)} = \frac{1}{1+e^{-x}}$</p>]]></content>
      
      
      <categories>
          
          <category> 随便写 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test00</title>
      <link href="/2023/01/20/test00/"/>
      <url>/2023/01/20/test00/</url>
      
        <content type="html"><![CDATA[<h1 id="这是一个测试文件"><a href="#这是一个测试文件" class="headerlink" title="这是一个测试文件"></a>这是一个测试文件</h1><p><strong>测试</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/20/hello-world/"/>
      <url>/2023/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
